# 수 찾기
# 시간 제한	메모리 제한	제출	정답	맞힌 사람	정답 비율
# 1 초	128 MB	311067	100197	65869	30.706%
# 문제
# N개의 정수 A[1], A[2], …, A[N]이 주어져 있을 때, 이 안에 X라는 정수가 존재하는지 알아내는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 자연수 N(1 ≤ N ≤ 100,000)이 주어진다. 다음 줄에는 N개의 정수 A[1], A[2], …, A[N]이 주어진다. 다음 줄에는 M(1 ≤ M ≤ 100,000)이 주어진다. 다음 줄에는 M개의 수들이 주어지는데, 이 수들이 A안에 존재하는지 알아내면 된다. 모든 정수의 범위는 -231 보다 크거나 같고 231보다 작다.

# 출력
# M개의 줄에 답을 출력한다. 존재하면 1을, 존재하지 않으면 0을 출력한다.

import sys



def solution(N:int, NL:set, M:int, ML:list):

    for j in ML: 
        if j in NL:
            print(1)
        else:
            print(0)


if __name__ == "__main__":
    N = int(sys.stdin.readline())
    n_data = set(sys.stdin.readline().split())
    M = int(sys.stdin.readline())
    m_data = sys.stdin.readline().split()

    solution(N, n_data, M, m_data)



"""
방법 2.
set탐색법   -시간 복잡도 : O(1)

Set은 List보다 더 빠른 탐색 속도를 가진다
그 이유는 내부적인 데이터 구조와 탐색 알고리즘의 차이 때문입니다.

1. 데이터 구조: - Set은 해시 테이블(Hash Table)로 구현되어 있습니다. 

해시 테이블은 값에 대한 고유한 해시 코드를 계산하고,
해당 해시 코드를 기반으로 값을 저장하고 검색합니다.
이렇게 함으로써 Set은 중복된 값을 허용하지 않으며,
값에 상수 시간(O(1))으로 접근할 수 있습니다.

- List는 배열(Array)로 구현되어 있습니다.
   배열은 각 요소가 인덱스로 직접 접근되므로 인덱스를 알면 상수 시간(O(1))에
   해당 요소에 접근할 수 있습니다.
하지만 List에서 값을 검색하기 위해서는 전체 리스트를 순회해야 하므로
최악의 경우 선형 시간(O(N))이 걸릴 수 있습니다.


2. 탐색 알고리즘: - Set에서 값의 존재 여부를 확인하는 연산은
내부적으로 해시 함수와 버킷(bucket)을 사용하여 상수 시간O(1) 안에 처리됩니다.
- List에서 값의 존재 여부를 확인하기 위해서는 순차적인 비교 연산을 수행해야 합니다.
따라서 최악의 경우 리스트의 모든 요소를 순회해야 하므로 선형 시간O(n)이 걸립니다.
따라서 Set은 내부적인 데이터 구조와 탐색 알고리즘을 통해 중복을 제거하고
빠른 탐색 속도를 제공합니다. 그러나 Set은 순서가 보장되지 않으며, 인덱스 기반 접근이 불가능하기 때문에
특정 위치의 요소에 바로 접근하는 용도보다는 멤버십(Membership) 확인(=존재유무확인) 등을 위한
용도로 주로 사용됩니다.-by 뤼튼-

출처: https://05-archives.tistory.com/232 [05의 개발 계발:티스토리]

타입    데이터 구조 구현        탐색 알고리즘    용도                    특징
---------------------------------------------------------------------------------------
Set     Hash Table             해시 함수&버킷   포함여부만 확인할 경우   중복값 제거
                                                                      요소 오름차순 정렬
                                                                      index 접근 불가
---------------------------------------------------------------------------------------
List    Array                   완전탐색        index 접근 필요할 경우  index 접근 가능

해당 값이 그룹에 존재하는가 확인하는 '멤버십(Membership) 확인' 의 경우에는 set이 더 유리하다.

<정적배열과 동적배열>
    일반적으로 Array는 정적 배열(Static array)을 의미하며
    연속된 메모리 공간에 동일한 타입과 크기의 요소들을 저장하여, index탐색에 유리한 점이 있다.
    하지만 Python에서의 List는 동적 배열(Dynamic array)로,
    다양한 타입과 크기의 요소들을 저장하며 index탐색도 가능하다.
    단, 요소의 삽입/삭제 등 추가 작업을 위해
    별도의 메모리 할당 및 복사 작업을 필요로 하므로
    정적 배열보다는 메모리 접근이 느릴 수 있다.


출처: https://05-archives.tistory.com/232 [05의 개발 계발:티스토리]

"""
